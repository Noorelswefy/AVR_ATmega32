
SPI_Slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000084e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a38  00000000  00000000  000008a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000008be  00000000  00000000  000012dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 fd 03 	call	0x7fa	; 0x7fa <main>
  64:	0c 94 25 04 	jmp	0x84a	; 0x84a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_voidSetPortDirection>:

/**/

void DIO_voidSetPortDirection(u8 copy_u8portID,u8 copy_u8PortDir )

{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_voidSetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_voidSetPortDirection+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	89 83       	std	Y+1, r24	; 0x01
  7a:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8portID)
  7c:	89 81       	ldd	r24, Y+1	; 0x01
  7e:	28 2f       	mov	r18, r24
  80:	30 e0       	ldi	r19, 0x00	; 0
  82:	3c 83       	std	Y+4, r19	; 0x04
  84:	2b 83       	std	Y+3, r18	; 0x03
  86:	8b 81       	ldd	r24, Y+3	; 0x03
  88:	9c 81       	ldd	r25, Y+4	; 0x04
  8a:	81 30       	cpi	r24, 0x01	; 1
  8c:	91 05       	cpc	r25, r1
  8e:	d1 f0       	breq	.+52     	; 0xc4 <DIO_voidSetPortDirection+0x58>
  90:	2b 81       	ldd	r18, Y+3	; 0x03
  92:	3c 81       	ldd	r19, Y+4	; 0x04
  94:	22 30       	cpi	r18, 0x02	; 2
  96:	31 05       	cpc	r19, r1
  98:	2c f4       	brge	.+10     	; 0xa4 <DIO_voidSetPortDirection+0x38>
  9a:	8b 81       	ldd	r24, Y+3	; 0x03
  9c:	9c 81       	ldd	r25, Y+4	; 0x04
  9e:	00 97       	sbiw	r24, 0x00	; 0
  a0:	61 f0       	breq	.+24     	; 0xba <DIO_voidSetPortDirection+0x4e>
  a2:	1e c0       	rjmp	.+60     	; 0xe0 <DIO_voidSetPortDirection+0x74>
  a4:	2b 81       	ldd	r18, Y+3	; 0x03
  a6:	3c 81       	ldd	r19, Y+4	; 0x04
  a8:	22 30       	cpi	r18, 0x02	; 2
  aa:	31 05       	cpc	r19, r1
  ac:	81 f0       	breq	.+32     	; 0xce <DIO_voidSetPortDirection+0x62>
  ae:	8b 81       	ldd	r24, Y+3	; 0x03
  b0:	9c 81       	ldd	r25, Y+4	; 0x04
  b2:	83 30       	cpi	r24, 0x03	; 3
  b4:	91 05       	cpc	r25, r1
  b6:	81 f0       	breq	.+32     	; 0xd8 <DIO_voidSetPortDirection+0x6c>
  b8:	13 c0       	rjmp	.+38     	; 0xe0 <DIO_voidSetPortDirection+0x74>
	{
	case PORTA_ID :   DDRA_REG= copy_u8PortDir ; break ;
  ba:	ea e3       	ldi	r30, 0x3A	; 58
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	8a 81       	ldd	r24, Y+2	; 0x02
  c0:	80 83       	st	Z, r24
  c2:	0e c0       	rjmp	.+28     	; 0xe0 <DIO_voidSetPortDirection+0x74>
	case PORTB_ID :   DDRB_REG= copy_u8PortDir ; break ;
  c4:	e7 e3       	ldi	r30, 0x37	; 55
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	8a 81       	ldd	r24, Y+2	; 0x02
  ca:	80 83       	st	Z, r24
  cc:	09 c0       	rjmp	.+18     	; 0xe0 <DIO_voidSetPortDirection+0x74>
	case PORTC_ID :   DDRC_REG= copy_u8PortDir ; break ;
  ce:	e4 e3       	ldi	r30, 0x34	; 52
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	8a 81       	ldd	r24, Y+2	; 0x02
  d4:	80 83       	st	Z, r24
  d6:	04 c0       	rjmp	.+8      	; 0xe0 <DIO_voidSetPortDirection+0x74>
	case PORTD_ID :   DDRD_REG= copy_u8PortDir ; break ;
  d8:	e1 e3       	ldi	r30, 0x31	; 49
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	8a 81       	ldd	r24, Y+2	; 0x02
  de:	80 83       	st	Z, r24

	}
}
  e0:	0f 90       	pop	r0
  e2:	0f 90       	pop	r0
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	cf 91       	pop	r28
  ea:	df 91       	pop	r29
  ec:	08 95       	ret

000000ee <DIO_voidSetPortValue>:


void DIO_voidSetPortValue(u8 copy_u8PortID,u8 copy_u8PortVal )

{
  ee:	df 93       	push	r29
  f0:	cf 93       	push	r28
  f2:	00 d0       	rcall	.+0      	; 0xf4 <DIO_voidSetPortValue+0x6>
  f4:	00 d0       	rcall	.+0      	; 0xf6 <DIO_voidSetPortValue+0x8>
  f6:	cd b7       	in	r28, 0x3d	; 61
  f8:	de b7       	in	r29, 0x3e	; 62
  fa:	89 83       	std	Y+1, r24	; 0x01
  fc:	6a 83       	std	Y+2, r22	; 0x02

	switch(copy_u8PortID)
  fe:	89 81       	ldd	r24, Y+1	; 0x01
 100:	28 2f       	mov	r18, r24
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	3c 83       	std	Y+4, r19	; 0x04
 106:	2b 83       	std	Y+3, r18	; 0x03
 108:	8b 81       	ldd	r24, Y+3	; 0x03
 10a:	9c 81       	ldd	r25, Y+4	; 0x04
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	91 05       	cpc	r25, r1
 110:	d1 f0       	breq	.+52     	; 0x146 <DIO_voidSetPortValue+0x58>
 112:	2b 81       	ldd	r18, Y+3	; 0x03
 114:	3c 81       	ldd	r19, Y+4	; 0x04
 116:	22 30       	cpi	r18, 0x02	; 2
 118:	31 05       	cpc	r19, r1
 11a:	2c f4       	brge	.+10     	; 0x126 <DIO_voidSetPortValue+0x38>
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	9c 81       	ldd	r25, Y+4	; 0x04
 120:	00 97       	sbiw	r24, 0x00	; 0
 122:	61 f0       	breq	.+24     	; 0x13c <DIO_voidSetPortValue+0x4e>
 124:	1e c0       	rjmp	.+60     	; 0x162 <DIO_voidSetPortValue+0x74>
 126:	2b 81       	ldd	r18, Y+3	; 0x03
 128:	3c 81       	ldd	r19, Y+4	; 0x04
 12a:	22 30       	cpi	r18, 0x02	; 2
 12c:	31 05       	cpc	r19, r1
 12e:	81 f0       	breq	.+32     	; 0x150 <DIO_voidSetPortValue+0x62>
 130:	8b 81       	ldd	r24, Y+3	; 0x03
 132:	9c 81       	ldd	r25, Y+4	; 0x04
 134:	83 30       	cpi	r24, 0x03	; 3
 136:	91 05       	cpc	r25, r1
 138:	81 f0       	breq	.+32     	; 0x15a <DIO_voidSetPortValue+0x6c>
 13a:	13 c0       	rjmp	.+38     	; 0x162 <DIO_voidSetPortValue+0x74>
	{

	case PORTA_ID :   PORTA_REG= copy_u8PortVal ; break ;
 13c:	eb e3       	ldi	r30, 0x3B	; 59
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	8a 81       	ldd	r24, Y+2	; 0x02
 142:	80 83       	st	Z, r24
 144:	0e c0       	rjmp	.+28     	; 0x162 <DIO_voidSetPortValue+0x74>
	case PORTB_ID :   PORTD_REG= copy_u8PortVal ; break ;
 146:	e2 e3       	ldi	r30, 0x32	; 50
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	8a 81       	ldd	r24, Y+2	; 0x02
 14c:	80 83       	st	Z, r24
 14e:	09 c0       	rjmp	.+18     	; 0x162 <DIO_voidSetPortValue+0x74>
	case PORTC_ID :   PORTC_REG= copy_u8PortVal ; break ;
 150:	e5 e3       	ldi	r30, 0x35	; 53
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	8a 81       	ldd	r24, Y+2	; 0x02
 156:	80 83       	st	Z, r24
 158:	04 c0       	rjmp	.+8      	; 0x162 <DIO_voidSetPortValue+0x74>
	case PORTD_ID :   PORTD_REG= copy_u8PortVal ; break ;
 15a:	e2 e3       	ldi	r30, 0x32	; 50
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	8a 81       	ldd	r24, Y+2	; 0x02
 160:	80 83       	st	Z, r24

	}
}
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	cf 91       	pop	r28
 16c:	df 91       	pop	r29
 16e:	08 95       	ret

00000170 <DIO_voidSetPinDirection>:




void	DIO_voidSetPinDirection(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinDir)
{
 170:	df 93       	push	r29
 172:	cf 93       	push	r28
 174:	cd b7       	in	r28, 0x3d	; 61
 176:	de b7       	in	r29, 0x3e	; 62
 178:	27 97       	sbiw	r28, 0x07	; 7
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	f8 94       	cli
 17e:	de bf       	out	0x3e, r29	; 62
 180:	0f be       	out	0x3f, r0	; 63
 182:	cd bf       	out	0x3d, r28	; 61
 184:	89 83       	std	Y+1, r24	; 0x01
 186:	6a 83       	std	Y+2, r22	; 0x02
 188:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8PinID>=PIN0&&Copy_u8PinID<=PIN7)
 18a:	8a 81       	ldd	r24, Y+2	; 0x02
 18c:	88 30       	cpi	r24, 0x08	; 8
 18e:	08 f0       	brcs	.+2      	; 0x192 <DIO_voidSetPinDirection+0x22>
 190:	ea c0       	rjmp	.+468    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
	{
		if(Copy_u8PinDir==PIN_OUTPUT)//Output
 192:	8b 81       	ldd	r24, Y+3	; 0x03
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	09 f0       	breq	.+2      	; 0x19a <DIO_voidSetPinDirection+0x2a>
 198:	6f c0       	rjmp	.+222    	; 0x278 <DIO_voidSetPinDirection+0x108>
		{
			switch(Copy_u8PortID)
 19a:	89 81       	ldd	r24, Y+1	; 0x01
 19c:	28 2f       	mov	r18, r24
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	3f 83       	std	Y+7, r19	; 0x07
 1a2:	2e 83       	std	Y+6, r18	; 0x06
 1a4:	8e 81       	ldd	r24, Y+6	; 0x06
 1a6:	9f 81       	ldd	r25, Y+7	; 0x07
 1a8:	81 30       	cpi	r24, 0x01	; 1
 1aa:	91 05       	cpc	r25, r1
 1ac:	49 f1       	breq	.+82     	; 0x200 <DIO_voidSetPinDirection+0x90>
 1ae:	2e 81       	ldd	r18, Y+6	; 0x06
 1b0:	3f 81       	ldd	r19, Y+7	; 0x07
 1b2:	22 30       	cpi	r18, 0x02	; 2
 1b4:	31 05       	cpc	r19, r1
 1b6:	2c f4       	brge	.+10     	; 0x1c2 <DIO_voidSetPinDirection+0x52>
 1b8:	8e 81       	ldd	r24, Y+6	; 0x06
 1ba:	9f 81       	ldd	r25, Y+7	; 0x07
 1bc:	00 97       	sbiw	r24, 0x00	; 0
 1be:	61 f0       	breq	.+24     	; 0x1d8 <DIO_voidSetPinDirection+0x68>
 1c0:	d2 c0       	rjmp	.+420    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
 1c2:	2e 81       	ldd	r18, Y+6	; 0x06
 1c4:	3f 81       	ldd	r19, Y+7	; 0x07
 1c6:	22 30       	cpi	r18, 0x02	; 2
 1c8:	31 05       	cpc	r19, r1
 1ca:	71 f1       	breq	.+92     	; 0x228 <DIO_voidSetPinDirection+0xb8>
 1cc:	8e 81       	ldd	r24, Y+6	; 0x06
 1ce:	9f 81       	ldd	r25, Y+7	; 0x07
 1d0:	83 30       	cpi	r24, 0x03	; 3
 1d2:	91 05       	cpc	r25, r1
 1d4:	e9 f1       	breq	.+122    	; 0x250 <DIO_voidSetPinDirection+0xe0>
 1d6:	c7 c0       	rjmp	.+398    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
			{
			case PORTA_ID:    SET_BIT(DDRA_REG,Copy_u8PinID); break;
 1d8:	aa e3       	ldi	r26, 0x3A	; 58
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	ea e3       	ldi	r30, 0x3A	; 58
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	48 2f       	mov	r20, r24
 1e4:	8a 81       	ldd	r24, Y+2	; 0x02
 1e6:	28 2f       	mov	r18, r24
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 2e       	mov	r0, r18
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_voidSetPinDirection+0x86>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	0a 94       	dec	r0
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_voidSetPinDirection+0x82>
 1fa:	84 2b       	or	r24, r20
 1fc:	8c 93       	st	X, r24
 1fe:	b3 c0       	rjmp	.+358    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
			case PORTB_ID:    SET_BIT(DDRB_REG,Copy_u8PinID); break;
 200:	a7 e3       	ldi	r26, 0x37	; 55
 202:	b0 e0       	ldi	r27, 0x00	; 0
 204:	e7 e3       	ldi	r30, 0x37	; 55
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	80 81       	ld	r24, Z
 20a:	48 2f       	mov	r20, r24
 20c:	8a 81       	ldd	r24, Y+2	; 0x02
 20e:	28 2f       	mov	r18, r24
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 2e       	mov	r0, r18
 218:	02 c0       	rjmp	.+4      	; 0x21e <DIO_voidSetPinDirection+0xae>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	0a 94       	dec	r0
 220:	e2 f7       	brpl	.-8      	; 0x21a <DIO_voidSetPinDirection+0xaa>
 222:	84 2b       	or	r24, r20
 224:	8c 93       	st	X, r24
 226:	9f c0       	rjmp	.+318    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
			case PORTC_ID:    SET_BIT(DDRC_REG,Copy_u8PinID); break;
 228:	a4 e3       	ldi	r26, 0x34	; 52
 22a:	b0 e0       	ldi	r27, 0x00	; 0
 22c:	e4 e3       	ldi	r30, 0x34	; 52
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	48 2f       	mov	r20, r24
 234:	8a 81       	ldd	r24, Y+2	; 0x02
 236:	28 2f       	mov	r18, r24
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 2e       	mov	r0, r18
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_voidSetPinDirection+0xd6>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	0a 94       	dec	r0
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_voidSetPinDirection+0xd2>
 24a:	84 2b       	or	r24, r20
 24c:	8c 93       	st	X, r24
 24e:	8b c0       	rjmp	.+278    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
			case PORTD_ID:    SET_BIT(DDRD_REG,Copy_u8PinID); break;
 250:	a1 e3       	ldi	r26, 0x31	; 49
 252:	b0 e0       	ldi	r27, 0x00	; 0
 254:	e1 e3       	ldi	r30, 0x31	; 49
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	48 2f       	mov	r20, r24
 25c:	8a 81       	ldd	r24, Y+2	; 0x02
 25e:	28 2f       	mov	r18, r24
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 2e       	mov	r0, r18
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_voidSetPinDirection+0xfe>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	0a 94       	dec	r0
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_voidSetPinDirection+0xfa>
 272:	84 2b       	or	r24, r20
 274:	8c 93       	st	X, r24
 276:	77 c0       	rjmp	.+238    	; 0x366 <DIO_voidSetPinDirection+0x1f6>

			default:   break;

			}
		}
		else if(Copy_u8PinDir==PIN_INPUT)//Input
 278:	8b 81       	ldd	r24, Y+3	; 0x03
 27a:	88 23       	and	r24, r24
 27c:	09 f0       	breq	.+2      	; 0x280 <DIO_voidSetPinDirection+0x110>
 27e:	73 c0       	rjmp	.+230    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
		{
			switch(Copy_u8PortID)
 280:	89 81       	ldd	r24, Y+1	; 0x01
 282:	28 2f       	mov	r18, r24
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	3d 83       	std	Y+5, r19	; 0x05
 288:	2c 83       	std	Y+4, r18	; 0x04
 28a:	8c 81       	ldd	r24, Y+4	; 0x04
 28c:	9d 81       	ldd	r25, Y+5	; 0x05
 28e:	81 30       	cpi	r24, 0x01	; 1
 290:	91 05       	cpc	r25, r1
 292:	59 f1       	breq	.+86     	; 0x2ea <DIO_voidSetPinDirection+0x17a>
 294:	2c 81       	ldd	r18, Y+4	; 0x04
 296:	3d 81       	ldd	r19, Y+5	; 0x05
 298:	22 30       	cpi	r18, 0x02	; 2
 29a:	31 05       	cpc	r19, r1
 29c:	2c f4       	brge	.+10     	; 0x2a8 <DIO_voidSetPinDirection+0x138>
 29e:	8c 81       	ldd	r24, Y+4	; 0x04
 2a0:	9d 81       	ldd	r25, Y+5	; 0x05
 2a2:	00 97       	sbiw	r24, 0x00	; 0
 2a4:	69 f0       	breq	.+26     	; 0x2c0 <DIO_voidSetPinDirection+0x150>
 2a6:	5f c0       	rjmp	.+190    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
 2a8:	2c 81       	ldd	r18, Y+4	; 0x04
 2aa:	3d 81       	ldd	r19, Y+5	; 0x05
 2ac:	22 30       	cpi	r18, 0x02	; 2
 2ae:	31 05       	cpc	r19, r1
 2b0:	89 f1       	breq	.+98     	; 0x314 <DIO_voidSetPinDirection+0x1a4>
 2b2:	8c 81       	ldd	r24, Y+4	; 0x04
 2b4:	9d 81       	ldd	r25, Y+5	; 0x05
 2b6:	83 30       	cpi	r24, 0x03	; 3
 2b8:	91 05       	cpc	r25, r1
 2ba:	09 f4       	brne	.+2      	; 0x2be <DIO_voidSetPinDirection+0x14e>
 2bc:	40 c0       	rjmp	.+128    	; 0x33e <DIO_voidSetPinDirection+0x1ce>
 2be:	53 c0       	rjmp	.+166    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
			{
			case PORTA_ID:   CLR_BIT(DDRA_REG,Copy_u8PinID); break;
 2c0:	aa e3       	ldi	r26, 0x3A	; 58
 2c2:	b0 e0       	ldi	r27, 0x00	; 0
 2c4:	ea e3       	ldi	r30, 0x3A	; 58
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	48 2f       	mov	r20, r24
 2cc:	8a 81       	ldd	r24, Y+2	; 0x02
 2ce:	28 2f       	mov	r18, r24
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	02 2e       	mov	r0, r18
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <DIO_voidSetPinDirection+0x16e>
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	0a 94       	dec	r0
 2e0:	e2 f7       	brpl	.-8      	; 0x2da <DIO_voidSetPinDirection+0x16a>
 2e2:	80 95       	com	r24
 2e4:	84 23       	and	r24, r20
 2e6:	8c 93       	st	X, r24
 2e8:	3e c0       	rjmp	.+124    	; 0x366 <DIO_voidSetPinDirection+0x1f6>
			case PORTB_ID:   CLR_BIT(DDRB_REG,Copy_u8PinID); break;
 2ea:	a7 e3       	ldi	r26, 0x37	; 55
 2ec:	b0 e0       	ldi	r27, 0x00	; 0
 2ee:	e7 e3       	ldi	r30, 0x37	; 55
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	80 81       	ld	r24, Z
 2f4:	48 2f       	mov	r20, r24
 2f6:	8a 81       	ldd	r24, Y+2	; 0x02
 2f8:	28 2f       	mov	r18, r24
 2fa:	30 e0       	ldi	r19, 0x00	; 0
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	02 2e       	mov	r0, r18
 302:	02 c0       	rjmp	.+4      	; 0x308 <DIO_voidSetPinDirection+0x198>
 304:	88 0f       	add	r24, r24
 306:	99 1f       	adc	r25, r25
 308:	0a 94       	dec	r0
 30a:	e2 f7       	brpl	.-8      	; 0x304 <DIO_voidSetPinDirection+0x194>
 30c:	80 95       	com	r24
 30e:	84 23       	and	r24, r20
 310:	8c 93       	st	X, r24
 312:	29 c0       	rjmp	.+82     	; 0x366 <DIO_voidSetPinDirection+0x1f6>
			case PORTC_ID:   CLR_BIT(DDRC_REG,Copy_u8PinID); break;
 314:	a4 e3       	ldi	r26, 0x34	; 52
 316:	b0 e0       	ldi	r27, 0x00	; 0
 318:	e4 e3       	ldi	r30, 0x34	; 52
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	48 2f       	mov	r20, r24
 320:	8a 81       	ldd	r24, Y+2	; 0x02
 322:	28 2f       	mov	r18, r24
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 2e       	mov	r0, r18
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_voidSetPinDirection+0x1c2>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	0a 94       	dec	r0
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_voidSetPinDirection+0x1be>
 336:	80 95       	com	r24
 338:	84 23       	and	r24, r20
 33a:	8c 93       	st	X, r24
 33c:	14 c0       	rjmp	.+40     	; 0x366 <DIO_voidSetPinDirection+0x1f6>
			case PORTD_ID:   CLR_BIT(DDRD_REG,Copy_u8PinID); break;
 33e:	a1 e3       	ldi	r26, 0x31	; 49
 340:	b0 e0       	ldi	r27, 0x00	; 0
 342:	e1 e3       	ldi	r30, 0x31	; 49
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	80 81       	ld	r24, Z
 348:	48 2f       	mov	r20, r24
 34a:	8a 81       	ldd	r24, Y+2	; 0x02
 34c:	28 2f       	mov	r18, r24
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	02 2e       	mov	r0, r18
 356:	02 c0       	rjmp	.+4      	; 0x35c <DIO_voidSetPinDirection+0x1ec>
 358:	88 0f       	add	r24, r24
 35a:	99 1f       	adc	r25, r25
 35c:	0a 94       	dec	r0
 35e:	e2 f7       	brpl	.-8      	; 0x358 <DIO_voidSetPinDirection+0x1e8>
 360:	80 95       	com	r24
 362:	84 23       	and	r24, r20
 364:	8c 93       	st	X, r24
			default:   break;
			}
		}
	}

}
 366:	27 96       	adiw	r28, 0x07	; 7
 368:	0f b6       	in	r0, 0x3f	; 63
 36a:	f8 94       	cli
 36c:	de bf       	out	0x3e, r29	; 62
 36e:	0f be       	out	0x3f, r0	; 63
 370:	cd bf       	out	0x3d, r28	; 61
 372:	cf 91       	pop	r28
 374:	df 91       	pop	r29
 376:	08 95       	ret

00000378 <DIO_voidSetPinValue>:
void    DIO_voidSetPinValue(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinValue)
{
 378:	df 93       	push	r29
 37a:	cf 93       	push	r28
 37c:	cd b7       	in	r28, 0x3d	; 61
 37e:	de b7       	in	r29, 0x3e	; 62
 380:	27 97       	sbiw	r28, 0x07	; 7
 382:	0f b6       	in	r0, 0x3f	; 63
 384:	f8 94       	cli
 386:	de bf       	out	0x3e, r29	; 62
 388:	0f be       	out	0x3f, r0	; 63
 38a:	cd bf       	out	0x3d, r28	; 61
 38c:	89 83       	std	Y+1, r24	; 0x01
 38e:	6a 83       	std	Y+2, r22	; 0x02
 390:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8PinID>=PIN0&&Copy_u8PinID<=PIN7)
 392:	8a 81       	ldd	r24, Y+2	; 0x02
 394:	88 30       	cpi	r24, 0x08	; 8
 396:	08 f0       	brcs	.+2      	; 0x39a <DIO_voidSetPinValue+0x22>
 398:	ea c0       	rjmp	.+468    	; 0x56e <DIO_voidSetPinValue+0x1f6>
	{
		if(Copy_u8PinValue==PIN_HIGH)//High
 39a:	8b 81       	ldd	r24, Y+3	; 0x03
 39c:	81 30       	cpi	r24, 0x01	; 1
 39e:	09 f0       	breq	.+2      	; 0x3a2 <DIO_voidSetPinValue+0x2a>
 3a0:	6f c0       	rjmp	.+222    	; 0x480 <DIO_voidSetPinValue+0x108>
		{

			switch(Copy_u8PortID)
 3a2:	89 81       	ldd	r24, Y+1	; 0x01
 3a4:	28 2f       	mov	r18, r24
 3a6:	30 e0       	ldi	r19, 0x00	; 0
 3a8:	3f 83       	std	Y+7, r19	; 0x07
 3aa:	2e 83       	std	Y+6, r18	; 0x06
 3ac:	8e 81       	ldd	r24, Y+6	; 0x06
 3ae:	9f 81       	ldd	r25, Y+7	; 0x07
 3b0:	81 30       	cpi	r24, 0x01	; 1
 3b2:	91 05       	cpc	r25, r1
 3b4:	49 f1       	breq	.+82     	; 0x408 <DIO_voidSetPinValue+0x90>
 3b6:	2e 81       	ldd	r18, Y+6	; 0x06
 3b8:	3f 81       	ldd	r19, Y+7	; 0x07
 3ba:	22 30       	cpi	r18, 0x02	; 2
 3bc:	31 05       	cpc	r19, r1
 3be:	2c f4       	brge	.+10     	; 0x3ca <DIO_voidSetPinValue+0x52>
 3c0:	8e 81       	ldd	r24, Y+6	; 0x06
 3c2:	9f 81       	ldd	r25, Y+7	; 0x07
 3c4:	00 97       	sbiw	r24, 0x00	; 0
 3c6:	61 f0       	breq	.+24     	; 0x3e0 <DIO_voidSetPinValue+0x68>
 3c8:	d2 c0       	rjmp	.+420    	; 0x56e <DIO_voidSetPinValue+0x1f6>
 3ca:	2e 81       	ldd	r18, Y+6	; 0x06
 3cc:	3f 81       	ldd	r19, Y+7	; 0x07
 3ce:	22 30       	cpi	r18, 0x02	; 2
 3d0:	31 05       	cpc	r19, r1
 3d2:	71 f1       	breq	.+92     	; 0x430 <DIO_voidSetPinValue+0xb8>
 3d4:	8e 81       	ldd	r24, Y+6	; 0x06
 3d6:	9f 81       	ldd	r25, Y+7	; 0x07
 3d8:	83 30       	cpi	r24, 0x03	; 3
 3da:	91 05       	cpc	r25, r1
 3dc:	e9 f1       	breq	.+122    	; 0x458 <DIO_voidSetPinValue+0xe0>
 3de:	c7 c0       	rjmp	.+398    	; 0x56e <DIO_voidSetPinValue+0x1f6>
			{
			case PORTA_ID :    SET_BIT(PORTA_REG,Copy_u8PinID); break;
 3e0:	ab e3       	ldi	r26, 0x3B	; 59
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	eb e3       	ldi	r30, 0x3B	; 59
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	48 2f       	mov	r20, r24
 3ec:	8a 81       	ldd	r24, Y+2	; 0x02
 3ee:	28 2f       	mov	r18, r24
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	02 2e       	mov	r0, r18
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_voidSetPinValue+0x86>
 3fa:	88 0f       	add	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	0a 94       	dec	r0
 400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_voidSetPinValue+0x82>
 402:	84 2b       	or	r24, r20
 404:	8c 93       	st	X, r24
 406:	b3 c0       	rjmp	.+358    	; 0x56e <DIO_voidSetPinValue+0x1f6>
			case PORTB_ID :    SET_BIT(PORTB_REG,Copy_u8PinID); break;
 408:	a8 e3       	ldi	r26, 0x38	; 56
 40a:	b0 e0       	ldi	r27, 0x00	; 0
 40c:	e8 e3       	ldi	r30, 0x38	; 56
 40e:	f0 e0       	ldi	r31, 0x00	; 0
 410:	80 81       	ld	r24, Z
 412:	48 2f       	mov	r20, r24
 414:	8a 81       	ldd	r24, Y+2	; 0x02
 416:	28 2f       	mov	r18, r24
 418:	30 e0       	ldi	r19, 0x00	; 0
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	02 2e       	mov	r0, r18
 420:	02 c0       	rjmp	.+4      	; 0x426 <DIO_voidSetPinValue+0xae>
 422:	88 0f       	add	r24, r24
 424:	99 1f       	adc	r25, r25
 426:	0a 94       	dec	r0
 428:	e2 f7       	brpl	.-8      	; 0x422 <DIO_voidSetPinValue+0xaa>
 42a:	84 2b       	or	r24, r20
 42c:	8c 93       	st	X, r24
 42e:	9f c0       	rjmp	.+318    	; 0x56e <DIO_voidSetPinValue+0x1f6>
			case PORTC_ID :    SET_BIT(PORTC_REG,Copy_u8PinID); break;
 430:	a5 e3       	ldi	r26, 0x35	; 53
 432:	b0 e0       	ldi	r27, 0x00	; 0
 434:	e5 e3       	ldi	r30, 0x35	; 53
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	80 81       	ld	r24, Z
 43a:	48 2f       	mov	r20, r24
 43c:	8a 81       	ldd	r24, Y+2	; 0x02
 43e:	28 2f       	mov	r18, r24
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	02 2e       	mov	r0, r18
 448:	02 c0       	rjmp	.+4      	; 0x44e <DIO_voidSetPinValue+0xd6>
 44a:	88 0f       	add	r24, r24
 44c:	99 1f       	adc	r25, r25
 44e:	0a 94       	dec	r0
 450:	e2 f7       	brpl	.-8      	; 0x44a <DIO_voidSetPinValue+0xd2>
 452:	84 2b       	or	r24, r20
 454:	8c 93       	st	X, r24
 456:	8b c0       	rjmp	.+278    	; 0x56e <DIO_voidSetPinValue+0x1f6>
			case PORTD_ID :    SET_BIT(PORTD_REG,Copy_u8PinID); break;
 458:	a2 e3       	ldi	r26, 0x32	; 50
 45a:	b0 e0       	ldi	r27, 0x00	; 0
 45c:	e2 e3       	ldi	r30, 0x32	; 50
 45e:	f0 e0       	ldi	r31, 0x00	; 0
 460:	80 81       	ld	r24, Z
 462:	48 2f       	mov	r20, r24
 464:	8a 81       	ldd	r24, Y+2	; 0x02
 466:	28 2f       	mov	r18, r24
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	02 2e       	mov	r0, r18
 470:	02 c0       	rjmp	.+4      	; 0x476 <DIO_voidSetPinValue+0xfe>
 472:	88 0f       	add	r24, r24
 474:	99 1f       	adc	r25, r25
 476:	0a 94       	dec	r0
 478:	e2 f7       	brpl	.-8      	; 0x472 <DIO_voidSetPinValue+0xfa>
 47a:	84 2b       	or	r24, r20
 47c:	8c 93       	st	X, r24
 47e:	77 c0       	rjmp	.+238    	; 0x56e <DIO_voidSetPinValue+0x1f6>

			}
		}
		else if(Copy_u8PinValue==PIN_LOW)//Low
 480:	8b 81       	ldd	r24, Y+3	; 0x03
 482:	88 23       	and	r24, r24
 484:	09 f0       	breq	.+2      	; 0x488 <DIO_voidSetPinValue+0x110>
 486:	73 c0       	rjmp	.+230    	; 0x56e <DIO_voidSetPinValue+0x1f6>
		{
			switch(Copy_u8PortID)
 488:	89 81       	ldd	r24, Y+1	; 0x01
 48a:	28 2f       	mov	r18, r24
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	3d 83       	std	Y+5, r19	; 0x05
 490:	2c 83       	std	Y+4, r18	; 0x04
 492:	8c 81       	ldd	r24, Y+4	; 0x04
 494:	9d 81       	ldd	r25, Y+5	; 0x05
 496:	81 30       	cpi	r24, 0x01	; 1
 498:	91 05       	cpc	r25, r1
 49a:	59 f1       	breq	.+86     	; 0x4f2 <DIO_voidSetPinValue+0x17a>
 49c:	2c 81       	ldd	r18, Y+4	; 0x04
 49e:	3d 81       	ldd	r19, Y+5	; 0x05
 4a0:	22 30       	cpi	r18, 0x02	; 2
 4a2:	31 05       	cpc	r19, r1
 4a4:	2c f4       	brge	.+10     	; 0x4b0 <DIO_voidSetPinValue+0x138>
 4a6:	8c 81       	ldd	r24, Y+4	; 0x04
 4a8:	9d 81       	ldd	r25, Y+5	; 0x05
 4aa:	00 97       	sbiw	r24, 0x00	; 0
 4ac:	69 f0       	breq	.+26     	; 0x4c8 <DIO_voidSetPinValue+0x150>
 4ae:	5f c0       	rjmp	.+190    	; 0x56e <DIO_voidSetPinValue+0x1f6>
 4b0:	2c 81       	ldd	r18, Y+4	; 0x04
 4b2:	3d 81       	ldd	r19, Y+5	; 0x05
 4b4:	22 30       	cpi	r18, 0x02	; 2
 4b6:	31 05       	cpc	r19, r1
 4b8:	89 f1       	breq	.+98     	; 0x51c <DIO_voidSetPinValue+0x1a4>
 4ba:	8c 81       	ldd	r24, Y+4	; 0x04
 4bc:	9d 81       	ldd	r25, Y+5	; 0x05
 4be:	83 30       	cpi	r24, 0x03	; 3
 4c0:	91 05       	cpc	r25, r1
 4c2:	09 f4       	brne	.+2      	; 0x4c6 <DIO_voidSetPinValue+0x14e>
 4c4:	40 c0       	rjmp	.+128    	; 0x546 <DIO_voidSetPinValue+0x1ce>
 4c6:	53 c0       	rjmp	.+166    	; 0x56e <DIO_voidSetPinValue+0x1f6>
			{
			case PORTA_ID : CLR_BIT(PORTA_REG,Copy_u8PinID); break ;
 4c8:	ab e3       	ldi	r26, 0x3B	; 59
 4ca:	b0 e0       	ldi	r27, 0x00	; 0
 4cc:	eb e3       	ldi	r30, 0x3B	; 59
 4ce:	f0 e0       	ldi	r31, 0x00	; 0
 4d0:	80 81       	ld	r24, Z
 4d2:	48 2f       	mov	r20, r24
 4d4:	8a 81       	ldd	r24, Y+2	; 0x02
 4d6:	28 2f       	mov	r18, r24
 4d8:	30 e0       	ldi	r19, 0x00	; 0
 4da:	81 e0       	ldi	r24, 0x01	; 1
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	02 2e       	mov	r0, r18
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <DIO_voidSetPinValue+0x16e>
 4e2:	88 0f       	add	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	0a 94       	dec	r0
 4e8:	e2 f7       	brpl	.-8      	; 0x4e2 <DIO_voidSetPinValue+0x16a>
 4ea:	80 95       	com	r24
 4ec:	84 23       	and	r24, r20
 4ee:	8c 93       	st	X, r24
 4f0:	3e c0       	rjmp	.+124    	; 0x56e <DIO_voidSetPinValue+0x1f6>
			case PORTB_ID : CLR_BIT(PORTB_REG,Copy_u8PinID); break ;
 4f2:	a8 e3       	ldi	r26, 0x38	; 56
 4f4:	b0 e0       	ldi	r27, 0x00	; 0
 4f6:	e8 e3       	ldi	r30, 0x38	; 56
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	80 81       	ld	r24, Z
 4fc:	48 2f       	mov	r20, r24
 4fe:	8a 81       	ldd	r24, Y+2	; 0x02
 500:	28 2f       	mov	r18, r24
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	02 2e       	mov	r0, r18
 50a:	02 c0       	rjmp	.+4      	; 0x510 <DIO_voidSetPinValue+0x198>
 50c:	88 0f       	add	r24, r24
 50e:	99 1f       	adc	r25, r25
 510:	0a 94       	dec	r0
 512:	e2 f7       	brpl	.-8      	; 0x50c <DIO_voidSetPinValue+0x194>
 514:	80 95       	com	r24
 516:	84 23       	and	r24, r20
 518:	8c 93       	st	X, r24
 51a:	29 c0       	rjmp	.+82     	; 0x56e <DIO_voidSetPinValue+0x1f6>
			case PORTC_ID : CLR_BIT(PORTC_REG,Copy_u8PinID) ;break ;
 51c:	a5 e3       	ldi	r26, 0x35	; 53
 51e:	b0 e0       	ldi	r27, 0x00	; 0
 520:	e5 e3       	ldi	r30, 0x35	; 53
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	80 81       	ld	r24, Z
 526:	48 2f       	mov	r20, r24
 528:	8a 81       	ldd	r24, Y+2	; 0x02
 52a:	28 2f       	mov	r18, r24
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	02 2e       	mov	r0, r18
 534:	02 c0       	rjmp	.+4      	; 0x53a <DIO_voidSetPinValue+0x1c2>
 536:	88 0f       	add	r24, r24
 538:	99 1f       	adc	r25, r25
 53a:	0a 94       	dec	r0
 53c:	e2 f7       	brpl	.-8      	; 0x536 <DIO_voidSetPinValue+0x1be>
 53e:	80 95       	com	r24
 540:	84 23       	and	r24, r20
 542:	8c 93       	st	X, r24
 544:	14 c0       	rjmp	.+40     	; 0x56e <DIO_voidSetPinValue+0x1f6>
			case PORTD_ID : CLR_BIT(PORTD_REG,Copy_u8PinID) ;break ;
 546:	a2 e3       	ldi	r26, 0x32	; 50
 548:	b0 e0       	ldi	r27, 0x00	; 0
 54a:	e2 e3       	ldi	r30, 0x32	; 50
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	80 81       	ld	r24, Z
 550:	48 2f       	mov	r20, r24
 552:	8a 81       	ldd	r24, Y+2	; 0x02
 554:	28 2f       	mov	r18, r24
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	02 2e       	mov	r0, r18
 55e:	02 c0       	rjmp	.+4      	; 0x564 <DIO_voidSetPinValue+0x1ec>
 560:	88 0f       	add	r24, r24
 562:	99 1f       	adc	r25, r25
 564:	0a 94       	dec	r0
 566:	e2 f7       	brpl	.-8      	; 0x560 <DIO_voidSetPinValue+0x1e8>
 568:	80 95       	com	r24
 56a:	84 23       	and	r24, r20
 56c:	8c 93       	st	X, r24

			}
		}
	}
}
 56e:	27 96       	adiw	r28, 0x07	; 7
 570:	0f b6       	in	r0, 0x3f	; 63
 572:	f8 94       	cli
 574:	de bf       	out	0x3e, r29	; 62
 576:	0f be       	out	0x3f, r0	; 63
 578:	cd bf       	out	0x3d, r28	; 61
 57a:	cf 91       	pop	r28
 57c:	df 91       	pop	r29
 57e:	08 95       	ret

00000580 <DIO_voidGetBitValue>:

u8 DIO_voidGetBitValue(u8 copy_u8PortID , u8 copy_PinID )
{
 580:	df 93       	push	r29
 582:	cf 93       	push	r28
 584:	00 d0       	rcall	.+0      	; 0x586 <DIO_voidGetBitValue+0x6>
 586:	00 d0       	rcall	.+0      	; 0x588 <DIO_voidGetBitValue+0x8>
 588:	0f 92       	push	r0
 58a:	cd b7       	in	r28, 0x3d	; 61
 58c:	de b7       	in	r29, 0x3e	; 62
 58e:	8a 83       	std	Y+2, r24	; 0x02
 590:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_PinVal ;

	switch(copy_u8PortID)
 592:	8a 81       	ldd	r24, Y+2	; 0x02
 594:	28 2f       	mov	r18, r24
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	3d 83       	std	Y+5, r19	; 0x05
 59a:	2c 83       	std	Y+4, r18	; 0x04
 59c:	4c 81       	ldd	r20, Y+4	; 0x04
 59e:	5d 81       	ldd	r21, Y+5	; 0x05
 5a0:	41 30       	cpi	r20, 0x01	; 1
 5a2:	51 05       	cpc	r21, r1
 5a4:	41 f1       	breq	.+80     	; 0x5f6 <DIO_voidGetBitValue+0x76>
 5a6:	8c 81       	ldd	r24, Y+4	; 0x04
 5a8:	9d 81       	ldd	r25, Y+5	; 0x05
 5aa:	82 30       	cpi	r24, 0x02	; 2
 5ac:	91 05       	cpc	r25, r1
 5ae:	34 f4       	brge	.+12     	; 0x5bc <DIO_voidGetBitValue+0x3c>
 5b0:	2c 81       	ldd	r18, Y+4	; 0x04
 5b2:	3d 81       	ldd	r19, Y+5	; 0x05
 5b4:	21 15       	cp	r18, r1
 5b6:	31 05       	cpc	r19, r1
 5b8:	61 f0       	breq	.+24     	; 0x5d2 <DIO_voidGetBitValue+0x52>
 5ba:	52 c0       	rjmp	.+164    	; 0x660 <DIO_voidGetBitValue+0xe0>
 5bc:	4c 81       	ldd	r20, Y+4	; 0x04
 5be:	5d 81       	ldd	r21, Y+5	; 0x05
 5c0:	42 30       	cpi	r20, 0x02	; 2
 5c2:	51 05       	cpc	r21, r1
 5c4:	51 f1       	breq	.+84     	; 0x61a <DIO_voidGetBitValue+0x9a>
 5c6:	8c 81       	ldd	r24, Y+4	; 0x04
 5c8:	9d 81       	ldd	r25, Y+5	; 0x05
 5ca:	83 30       	cpi	r24, 0x03	; 3
 5cc:	91 05       	cpc	r25, r1
 5ce:	b9 f1       	breq	.+110    	; 0x63e <DIO_voidGetBitValue+0xbe>
 5d0:	47 c0       	rjmp	.+142    	; 0x660 <DIO_voidGetBitValue+0xe0>
	{

	case PORTA_ID : Local_PinVal=GET_BIT(PINA_REG,copy_PinID)   ; break ;
 5d2:	e9 e3       	ldi	r30, 0x39	; 57
 5d4:	f0 e0       	ldi	r31, 0x00	; 0
 5d6:	80 81       	ld	r24, Z
 5d8:	28 2f       	mov	r18, r24
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	8b 81       	ldd	r24, Y+3	; 0x03
 5de:	88 2f       	mov	r24, r24
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	a9 01       	movw	r20, r18
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_voidGetBitValue+0x6a>
 5e6:	55 95       	asr	r21
 5e8:	47 95       	ror	r20
 5ea:	8a 95       	dec	r24
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <DIO_voidGetBitValue+0x66>
 5ee:	ca 01       	movw	r24, r20
 5f0:	81 70       	andi	r24, 0x01	; 1
 5f2:	89 83       	std	Y+1, r24	; 0x01
 5f4:	35 c0       	rjmp	.+106    	; 0x660 <DIO_voidGetBitValue+0xe0>
	case PORTB_ID : Local_PinVal=GET_BIT(PINB_REG,copy_PinID)   ; break ;
 5f6:	e6 e3       	ldi	r30, 0x36	; 54
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	80 81       	ld	r24, Z
 5fc:	28 2f       	mov	r18, r24
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	8b 81       	ldd	r24, Y+3	; 0x03
 602:	88 2f       	mov	r24, r24
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	a9 01       	movw	r20, r18
 608:	02 c0       	rjmp	.+4      	; 0x60e <DIO_voidGetBitValue+0x8e>
 60a:	55 95       	asr	r21
 60c:	47 95       	ror	r20
 60e:	8a 95       	dec	r24
 610:	e2 f7       	brpl	.-8      	; 0x60a <DIO_voidGetBitValue+0x8a>
 612:	ca 01       	movw	r24, r20
 614:	81 70       	andi	r24, 0x01	; 1
 616:	89 83       	std	Y+1, r24	; 0x01
 618:	23 c0       	rjmp	.+70     	; 0x660 <DIO_voidGetBitValue+0xe0>

	case PORTC_ID : Local_PinVal=GET_BIT(PINC_REG,copy_PinID)   ; break ;
 61a:	e3 e3       	ldi	r30, 0x33	; 51
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	80 81       	ld	r24, Z
 620:	28 2f       	mov	r18, r24
 622:	30 e0       	ldi	r19, 0x00	; 0
 624:	8b 81       	ldd	r24, Y+3	; 0x03
 626:	88 2f       	mov	r24, r24
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	a9 01       	movw	r20, r18
 62c:	02 c0       	rjmp	.+4      	; 0x632 <DIO_voidGetBitValue+0xb2>
 62e:	55 95       	asr	r21
 630:	47 95       	ror	r20
 632:	8a 95       	dec	r24
 634:	e2 f7       	brpl	.-8      	; 0x62e <DIO_voidGetBitValue+0xae>
 636:	ca 01       	movw	r24, r20
 638:	81 70       	andi	r24, 0x01	; 1
 63a:	89 83       	std	Y+1, r24	; 0x01
 63c:	11 c0       	rjmp	.+34     	; 0x660 <DIO_voidGetBitValue+0xe0>

	case PORTD_ID : Local_PinVal=GET_BIT(PIND_REG,copy_PinID)   ; break ;
 63e:	e0 e3       	ldi	r30, 0x30	; 48
 640:	f0 e0       	ldi	r31, 0x00	; 0
 642:	80 81       	ld	r24, Z
 644:	28 2f       	mov	r18, r24
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	8b 81       	ldd	r24, Y+3	; 0x03
 64a:	88 2f       	mov	r24, r24
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	a9 01       	movw	r20, r18
 650:	02 c0       	rjmp	.+4      	; 0x656 <DIO_voidGetBitValue+0xd6>
 652:	55 95       	asr	r21
 654:	47 95       	ror	r20
 656:	8a 95       	dec	r24
 658:	e2 f7       	brpl	.-8      	; 0x652 <DIO_voidGetBitValue+0xd2>
 65a:	ca 01       	movw	r24, r20
 65c:	81 70       	andi	r24, 0x01	; 1
 65e:	89 83       	std	Y+1, r24	; 0x01

	}

	return Local_PinVal ;
 660:	89 81       	ldd	r24, Y+1	; 0x01

}
 662:	0f 90       	pop	r0
 664:	0f 90       	pop	r0
 666:	0f 90       	pop	r0
 668:	0f 90       	pop	r0
 66a:	0f 90       	pop	r0
 66c:	cf 91       	pop	r28
 66e:	df 91       	pop	r29
 670:	08 95       	ret

00000672 <DIO_voidToggelPin>:

}
 */

void DIO_voidToggelPin(u8 copy_u8PortID,u8 copy_u8PinID)
{
 672:	df 93       	push	r29
 674:	cf 93       	push	r28
 676:	00 d0       	rcall	.+0      	; 0x678 <DIO_voidToggelPin+0x6>
 678:	00 d0       	rcall	.+0      	; 0x67a <DIO_voidToggelPin+0x8>
 67a:	cd b7       	in	r28, 0x3d	; 61
 67c:	de b7       	in	r29, 0x3e	; 62
 67e:	89 83       	std	Y+1, r24	; 0x01
 680:	6a 83       	std	Y+2, r22	; 0x02

	switch (copy_u8PortID)
 682:	89 81       	ldd	r24, Y+1	; 0x01
 684:	28 2f       	mov	r18, r24
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	3c 83       	std	Y+4, r19	; 0x04
 68a:	2b 83       	std	Y+3, r18	; 0x03
 68c:	8b 81       	ldd	r24, Y+3	; 0x03
 68e:	9c 81       	ldd	r25, Y+4	; 0x04
 690:	81 30       	cpi	r24, 0x01	; 1
 692:	91 05       	cpc	r25, r1
 694:	49 f1       	breq	.+82     	; 0x6e8 <DIO_voidToggelPin+0x76>
 696:	2b 81       	ldd	r18, Y+3	; 0x03
 698:	3c 81       	ldd	r19, Y+4	; 0x04
 69a:	22 30       	cpi	r18, 0x02	; 2
 69c:	31 05       	cpc	r19, r1
 69e:	2c f4       	brge	.+10     	; 0x6aa <DIO_voidToggelPin+0x38>
 6a0:	8b 81       	ldd	r24, Y+3	; 0x03
 6a2:	9c 81       	ldd	r25, Y+4	; 0x04
 6a4:	00 97       	sbiw	r24, 0x00	; 0
 6a6:	61 f0       	breq	.+24     	; 0x6c0 <DIO_voidToggelPin+0x4e>
 6a8:	5a c0       	rjmp	.+180    	; 0x75e <DIO_voidToggelPin+0xec>
 6aa:	2b 81       	ldd	r18, Y+3	; 0x03
 6ac:	3c 81       	ldd	r19, Y+4	; 0x04
 6ae:	22 30       	cpi	r18, 0x02	; 2
 6b0:	31 05       	cpc	r19, r1
 6b2:	71 f1       	breq	.+92     	; 0x710 <DIO_voidToggelPin+0x9e>
 6b4:	8b 81       	ldd	r24, Y+3	; 0x03
 6b6:	9c 81       	ldd	r25, Y+4	; 0x04
 6b8:	83 30       	cpi	r24, 0x03	; 3
 6ba:	91 05       	cpc	r25, r1
 6bc:	e9 f1       	breq	.+122    	; 0x738 <DIO_voidToggelPin+0xc6>
 6be:	4f c0       	rjmp	.+158    	; 0x75e <DIO_voidToggelPin+0xec>
	{
	case PORTA_ID :  TOG_BIT(PORTA_REG,copy_u8PinID) ; break ;
 6c0:	ab e3       	ldi	r26, 0x3B	; 59
 6c2:	b0 e0       	ldi	r27, 0x00	; 0
 6c4:	eb e3       	ldi	r30, 0x3B	; 59
 6c6:	f0 e0       	ldi	r31, 0x00	; 0
 6c8:	80 81       	ld	r24, Z
 6ca:	48 2f       	mov	r20, r24
 6cc:	8a 81       	ldd	r24, Y+2	; 0x02
 6ce:	28 2f       	mov	r18, r24
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	81 e0       	ldi	r24, 0x01	; 1
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	02 2e       	mov	r0, r18
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <DIO_voidToggelPin+0x6c>
 6da:	88 0f       	add	r24, r24
 6dc:	99 1f       	adc	r25, r25
 6de:	0a 94       	dec	r0
 6e0:	e2 f7       	brpl	.-8      	; 0x6da <DIO_voidToggelPin+0x68>
 6e2:	84 27       	eor	r24, r20
 6e4:	8c 93       	st	X, r24
 6e6:	3b c0       	rjmp	.+118    	; 0x75e <DIO_voidToggelPin+0xec>
	case PORTB_ID :  TOG_BIT(PORTB_REG,copy_u8PinID) ; break ;
 6e8:	a8 e3       	ldi	r26, 0x38	; 56
 6ea:	b0 e0       	ldi	r27, 0x00	; 0
 6ec:	e8 e3       	ldi	r30, 0x38	; 56
 6ee:	f0 e0       	ldi	r31, 0x00	; 0
 6f0:	80 81       	ld	r24, Z
 6f2:	48 2f       	mov	r20, r24
 6f4:	8a 81       	ldd	r24, Y+2	; 0x02
 6f6:	28 2f       	mov	r18, r24
 6f8:	30 e0       	ldi	r19, 0x00	; 0
 6fa:	81 e0       	ldi	r24, 0x01	; 1
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	02 2e       	mov	r0, r18
 700:	02 c0       	rjmp	.+4      	; 0x706 <DIO_voidToggelPin+0x94>
 702:	88 0f       	add	r24, r24
 704:	99 1f       	adc	r25, r25
 706:	0a 94       	dec	r0
 708:	e2 f7       	brpl	.-8      	; 0x702 <DIO_voidToggelPin+0x90>
 70a:	84 27       	eor	r24, r20
 70c:	8c 93       	st	X, r24
 70e:	27 c0       	rjmp	.+78     	; 0x75e <DIO_voidToggelPin+0xec>
	case PORTC_ID :  TOG_BIT(PORTC_REG,copy_u8PinID) ; break ;
 710:	a5 e3       	ldi	r26, 0x35	; 53
 712:	b0 e0       	ldi	r27, 0x00	; 0
 714:	e5 e3       	ldi	r30, 0x35	; 53
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	80 81       	ld	r24, Z
 71a:	48 2f       	mov	r20, r24
 71c:	8a 81       	ldd	r24, Y+2	; 0x02
 71e:	28 2f       	mov	r18, r24
 720:	30 e0       	ldi	r19, 0x00	; 0
 722:	81 e0       	ldi	r24, 0x01	; 1
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	02 2e       	mov	r0, r18
 728:	02 c0       	rjmp	.+4      	; 0x72e <DIO_voidToggelPin+0xbc>
 72a:	88 0f       	add	r24, r24
 72c:	99 1f       	adc	r25, r25
 72e:	0a 94       	dec	r0
 730:	e2 f7       	brpl	.-8      	; 0x72a <DIO_voidToggelPin+0xb8>
 732:	84 27       	eor	r24, r20
 734:	8c 93       	st	X, r24
 736:	13 c0       	rjmp	.+38     	; 0x75e <DIO_voidToggelPin+0xec>
	case PORTD_ID :  TOG_BIT(PORTD_REG,copy_u8PinID) ; break ;
 738:	a2 e3       	ldi	r26, 0x32	; 50
 73a:	b0 e0       	ldi	r27, 0x00	; 0
 73c:	e2 e3       	ldi	r30, 0x32	; 50
 73e:	f0 e0       	ldi	r31, 0x00	; 0
 740:	80 81       	ld	r24, Z
 742:	48 2f       	mov	r20, r24
 744:	8a 81       	ldd	r24, Y+2	; 0x02
 746:	28 2f       	mov	r18, r24
 748:	30 e0       	ldi	r19, 0x00	; 0
 74a:	81 e0       	ldi	r24, 0x01	; 1
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	02 2e       	mov	r0, r18
 750:	02 c0       	rjmp	.+4      	; 0x756 <DIO_voidToggelPin+0xe4>
 752:	88 0f       	add	r24, r24
 754:	99 1f       	adc	r25, r25
 756:	0a 94       	dec	r0
 758:	e2 f7       	brpl	.-8      	; 0x752 <DIO_voidToggelPin+0xe0>
 75a:	84 27       	eor	r24, r20
 75c:	8c 93       	st	X, r24


	}
}
 75e:	0f 90       	pop	r0
 760:	0f 90       	pop	r0
 762:	0f 90       	pop	r0
 764:	0f 90       	pop	r0
 766:	cf 91       	pop	r28
 768:	df 91       	pop	r29
 76a:	08 95       	ret

0000076c <SPI_voidInitMaster>:

#include "SPI_config.h"
#include "SPI_private.h"
#include "SPI_interface.h"
void SPI_voidInitMaster()
{
 76c:	df 93       	push	r29
 76e:	cf 93       	push	r28
 770:	cd b7       	in	r28, 0x3d	; 61
 772:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SPI_SPCR,SPCR_SPR0);
 774:	ad e2       	ldi	r26, 0x2D	; 45
 776:	b0 e0       	ldi	r27, 0x00	; 0
 778:	ed e2       	ldi	r30, 0x2D	; 45
 77a:	f0 e0       	ldi	r31, 0x00	; 0
 77c:	80 81       	ld	r24, Z
 77e:	81 60       	ori	r24, 0x01	; 1
 780:	8c 93       	st	X, r24
	SET_BIT(SPI_SPCR,SPCR_MSTR);
 782:	ad e2       	ldi	r26, 0x2D	; 45
 784:	b0 e0       	ldi	r27, 0x00	; 0
 786:	ed e2       	ldi	r30, 0x2D	; 45
 788:	f0 e0       	ldi	r31, 0x00	; 0
 78a:	80 81       	ld	r24, Z
 78c:	80 61       	ori	r24, 0x10	; 16
 78e:	8c 93       	st	X, r24
	SET_BIT(SPI_SPCR,SPCR_SPE);
 790:	ad e2       	ldi	r26, 0x2D	; 45
 792:	b0 e0       	ldi	r27, 0x00	; 0
 794:	ed e2       	ldi	r30, 0x2D	; 45
 796:	f0 e0       	ldi	r31, 0x00	; 0
 798:	80 81       	ld	r24, Z
 79a:	80 64       	ori	r24, 0x40	; 64
 79c:	8c 93       	st	X, r24
}
 79e:	cf 91       	pop	r28
 7a0:	df 91       	pop	r29
 7a2:	08 95       	ret

000007a4 <SPI_voidInitSlave>:
void SPI_voidInitSlave()
{
 7a4:	df 93       	push	r29
 7a6:	cf 93       	push	r28
 7a8:	cd b7       	in	r28, 0x3d	; 61
 7aa:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SPI_SPCR,SPCR_MSTR);
 7ac:	ad e2       	ldi	r26, 0x2D	; 45
 7ae:	b0 e0       	ldi	r27, 0x00	; 0
 7b0:	ed e2       	ldi	r30, 0x2D	; 45
 7b2:	f0 e0       	ldi	r31, 0x00	; 0
 7b4:	80 81       	ld	r24, Z
 7b6:	8f 7e       	andi	r24, 0xEF	; 239
 7b8:	8c 93       	st	X, r24
	SET_BIT(SPI_SPCR,SPCR_SPE);
 7ba:	ad e2       	ldi	r26, 0x2D	; 45
 7bc:	b0 e0       	ldi	r27, 0x00	; 0
 7be:	ed e2       	ldi	r30, 0x2D	; 45
 7c0:	f0 e0       	ldi	r31, 0x00	; 0
 7c2:	80 81       	ld	r24, Z
 7c4:	80 64       	ori	r24, 0x40	; 64
 7c6:	8c 93       	st	X, r24

}
 7c8:	cf 91       	pop	r28
 7ca:	df 91       	pop	r29
 7cc:	08 95       	ret

000007ce <SPI_u8Transceive>:
u8 SPI_u8Transceive(u8 Copy_u8Data)
{
 7ce:	df 93       	push	r29
 7d0:	cf 93       	push	r28
 7d2:	0f 92       	push	r0
 7d4:	cd b7       	in	r28, 0x3d	; 61
 7d6:	de b7       	in	r29, 0x3e	; 62
 7d8:	89 83       	std	Y+1, r24	; 0x01
	SPI_SPDR = Copy_u8Data;
 7da:	ef e2       	ldi	r30, 0x2F	; 47
 7dc:	f0 e0       	ldi	r31, 0x00	; 0
 7de:	89 81       	ldd	r24, Y+1	; 0x01
 7e0:	80 83       	st	Z, r24
	while( GET_BIT(SPI_SPSR,SPSR_SPIF) == 0);
 7e2:	ee e2       	ldi	r30, 0x2E	; 46
 7e4:	f0 e0       	ldi	r31, 0x00	; 0
 7e6:	80 81       	ld	r24, Z
 7e8:	88 23       	and	r24, r24
 7ea:	dc f7       	brge	.-10     	; 0x7e2 <SPI_u8Transceive+0x14>
	return SPI_SPDR;
 7ec:	ef e2       	ldi	r30, 0x2F	; 47
 7ee:	f0 e0       	ldi	r31, 0x00	; 0
 7f0:	80 81       	ld	r24, Z
}
 7f2:	0f 90       	pop	r0
 7f4:	cf 91       	pop	r28
 7f6:	df 91       	pop	r29
 7f8:	08 95       	ret

000007fa <main>:
#include "SPI_interface.h"
#include <util/delay.h>

/* Slave program*/

int main() {
 7fa:	df 93       	push	r29
 7fc:	cf 93       	push	r28
 7fe:	0f 92       	push	r0
 800:	cd b7       	in	r28, 0x3d	; 61
 802:	de b7       	in	r29, 0x3e	; 62

	u8 ReceivedData;
	DIO_voidSetPinDirection(PORTB_ID, PIN6, PIN_OUTPUT); //miso
 804:	81 e0       	ldi	r24, 0x01	; 1
 806:	66 e0       	ldi	r22, 0x06	; 6
 808:	41 e0       	ldi	r20, 0x01	; 1
 80a:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTB_ID, PIN5, PIN_INPUT);//mosi
 80e:	81 e0       	ldi	r24, 0x01	; 1
 810:	65 e0       	ldi	r22, 0x05	; 5
 812:	40 e0       	ldi	r20, 0x00	; 0
 814:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(PORTB_ID, PIN4, PIN_HIGH);//ss
 818:	81 e0       	ldi	r24, 0x01	; 1
 81a:	64 e0       	ldi	r22, 0x04	; 4
 81c:	41 e0       	ldi	r20, 0x01	; 1
 81e:	0e 94 bc 01 	call	0x378	; 0x378 <DIO_voidSetPinValue>

	DIO_voidSetPinDirection(PORTA_ID, PIN0, PIN_OUTPUT);//led
 822:	80 e0       	ldi	r24, 0x00	; 0
 824:	60 e0       	ldi	r22, 0x00	; 0
 826:	41 e0       	ldi	r20, 0x01	; 1
 828:	0e 94 b8 00 	call	0x170	; 0x170 <DIO_voidSetPinDirection>

	SPI_voidInitSlave();
 82c:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <SPI_voidInitSlave>

	while (1)
	{
		ReceivedData = SPI_u8Transceive(10); //10 is a garbage
 830:	8a e0       	ldi	r24, 0x0A	; 10
 832:	0e 94 e7 03 	call	0x7ce	; 0x7ce <SPI_u8Transceive>
 836:	89 83       	std	Y+1, r24	; 0x01

		if(ReceivedData == 1)
 838:	89 81       	ldd	r24, Y+1	; 0x01
 83a:	81 30       	cpi	r24, 0x01	; 1
 83c:	c9 f7       	brne	.-14     	; 0x830 <main+0x36>
		{
			DIO_voidSetPinValue(PORTA_ID, PIN0, PIN_HIGH);
 83e:	80 e0       	ldi	r24, 0x00	; 0
 840:	60 e0       	ldi	r22, 0x00	; 0
 842:	41 e0       	ldi	r20, 0x01	; 1
 844:	0e 94 bc 01 	call	0x378	; 0x378 <DIO_voidSetPinValue>
 848:	f3 cf       	rjmp	.-26     	; 0x830 <main+0x36>

0000084a <_exit>:
 84a:	f8 94       	cli

0000084c <__stop_program>:
 84c:	ff cf       	rjmp	.-2      	; 0x84c <__stop_program>
